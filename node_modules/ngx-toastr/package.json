{
  "$schema": "../../node_modules/ng-packagr/package.schema.json",
  "_args": [
    [
      {
        "raw": "ngx-toastr",
        "scope": null,
        "escapedName": "ngx-toastr",
        "name": "ngx-toastr",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\I66168\\Desktop\\MTECH Projects\\Angular\\MoviesApp"
    ]
  ],
  "_from": "ngx-toastr",
  "_hasShrinkwrap": false,
  "_id": "ngx-toastr@10.0.2",
  "_location": "/ngx-toastr",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ngx-toastr_10.0.2_1552609044921_0.7107559084278774"
  },
  "_npmUser": {
    "name": "scttcper",
    "email": "scttcper@gmail.com"
  },
  "_npmVersion": "6.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngx-toastr",
    "scope": null,
    "escapedName": "ngx-toastr",
    "name": "ngx-toastr",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-toastr/-/ngx-toastr-10.0.2.tgz",
  "_shasum": "afc51eba792fb569f82c1563fecd5c34dc0968c7",
  "_shrinkwrap": null,
  "_spec": "ngx-toastr",
  "_where": "C:\\Users\\I66168\\Desktop\\MTECH Projects\\Angular\\MoviesApp",
  "bugs": {
    "url": "https://github.com/scttcper/ngx-toastr/issues"
  },
  "dependencies": {
    "tslib": "^1.9.0"
  },
  "description": "Toastr for Angular",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-sHlVAzRnuGYPR24l/C8+ftgWQuAJQ7XFNY55xCrPzSK8+jPg4ZViY6xSEQ5Aw0OXmjsa5aeBqWwAg5CVb1t7cg==",
    "shasum": "afc51eba792fb569f82c1563fecd5c34dc0968c7",
    "tarball": "https://registry.npmjs.org/ngx-toastr/-/ngx-toastr-10.0.2.tgz",
    "fileCount": 57,
    "unpackedSize": 957043,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJciu8VCRA9TVsSAnZWagAALEoP/ipEB1SVAbloxikQT+A9\nFFfXHmmg9g0Ih5SW4VhZjyq5/49HAnaWjtQxDSYHLSIhXfYIqNh6N8/pg1bj\nxgTd4xAylHRuAj5e88qXX0BLq/hT0m4WU8fXwv3BDw+DhORhDMkCAmSc8PO9\nedNB88juVcR0199fMa4D9u49hX41+eSuIz4FpbGLgejDloSRe/yo+MEa3RCq\ncTxMLAs9tmyzpVHFi9c83ZzKx1ix/ly4eTna3QAChmE+LJDmjgAGa+iTzw5D\nHLWgtHTm+3JIKbVdCw+kZqKaekIom1dgewpgZGo0BPEP8dsEiNJARDRNeUGz\njRh7JHNw4SzEDdiNMzPNMtrcKB32J8pyQdMheM2DmN+ORqcN4rfW2mZ1CUwX\nWroI+vPJajfEXQMwiOpiY5KzLu8PeqG1S67v2y1nv7uwmNXCcxT8SxhlvM25\nnHrL7jOg0wIbCmKW7t7O0+f4w+3umSFCdf3DNljcOWOZsDOBFiM+8O+0ELeZ\nJP00P2ZRH3UnqVitZnxMA1SW8xhPB4H8PlTWoY4dEl5HDuMlarvzn12GccIS\n84jlr69VPhhGELXKKa/b8wh+GLQN4iQOZNZPjwZ7axkCRw7rwrBLiME8yory\ntNV+G67W2jx1UGZ5woHt/Rg1gSOyE5thUZ6b0G9gcj14wFcQDr1eTjp0CaDw\nr7JO\r\n=hj85\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "es2015": "fesm2015/ngx-toastr.js",
  "esm2015": "esm2015/ngx-toastr.js",
  "esm5": "esm5/ngx-toastr.js",
  "fesm2015": "fesm2015/ngx-toastr.js",
  "fesm5": "fesm5/ngx-toastr.js",
  "homepage": "https://github.com/scttcper/ngx-toastr",
  "keywords": [
    "ng2",
    "ngx",
    "ngx-toastr",
    "toastr-ng2",
    "angular",
    "angular2",
    "typescript",
    "alert",
    "toast",
    "toastr",
    "angular toastr",
    "notifications"
  ],
  "license": "MIT",
  "main": "bundles/ngx-toastr.umd.js",
  "maintainers": [
    {
      "name": "scttcper",
      "email": "scttcper@gmail.com"
    }
  ],
  "metadata": "ngx-toastr.metadata.json",
  "module": "fesm5/ngx-toastr.js",
  "name": "ngx-toastr",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^6.0.0 || ^7.0.0",
    "@angular/common": "^6.0.0 || ^7.0.0",
    "@angular/platform-browser": "^6.0.0 || ^7.0.0",
    "rxjs": "^6.1.0"
  },
  "readme": "<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/scttcper/ngx-toastr/master/misc/documentation-assets/ngx-toastr-example.png\" width=\"300\" alt=\"Angular Toastr\">\n  <br>\n  <h1>ngx-toastr</h1>\n  <br>\n  <a href=\"https://www.npmjs.org/package/ngx-toastr\">\n    <img src=\"https://badge.fury.io/js/ngx-toastr.svg\" alt=\"npm\">\n  </a>\n  <a href=\"https://travis-ci.org/scttcper/ngx-toastr\">\n    <img src=\"https://travis-ci.org/scttcper/ngx-toastr.svg?branch=master\" alt=\"travis\">\n  </a>\n  <a href=\"https://codecov.io/github/scttcper/ngx-toastr\">\n    <img src=\"https://img.shields.io/codecov/c/github/scttcper/ngx-toastr.svg\" alt=\"codecov\">\n  </a>\n  <br>\n  <br>\n</div>\n\nDEMO: https://scttcper.github.io/ngx-toastr/\n\n## Features\n\n- Toast Component Injection without being passed `ViewContainerRef`\n- No use of `*ngFor`. Fewer dirty checks and higher performance.\n- AoT compilation and lazy loading compatible\n- Component inheritance for custom toasts\n- SystemJS/UMD rollup bundle\n- Animations using Angular's\n  [Web Animations API](https://angular.io/docs/ts/latest/guide/animations.html)\n- Output toasts to an optional target directive\n\n## Dependencies\nLatest version available for each version of Angular\n\n| ngx-toastr   | Angular |\n| ------------ | ------- |\n| 6.4.1-beta.0 | 4.x     |\n| 8.10.2       | 5.x     |\n\n## Install\n\n```bash\nnpm install ngx-toastr --save\n```\n\n`@angular/animations` package is a required dependency for the default toast\n\n```bash\nnpm install @angular/animations --save\n```\n\nDon't want to use `@angular/animations`? See\n[Setup Without Animations](#setup-without-animations).\n\n## Setup\n\n**step 1:** add css\n\n- copy\n  [toast css](/src/lib/toastr.css)\n  to your project.\n- If you are using sass you can import the css.\n\n```scss\n// regular style toast\n@import '~ngx-toastr/toastr.css';\n\n// bootstrap style toast\n// or import a bootstrap 4 alert styled design (SASS ONLY)\n// should be after your bootstrap imports, it uses bs4 variables, mixins, functions\n@import '~ngx-toastr/toastr-bs4-alert';\n\n// if you'd like to use it without importing all of bootstrap it requires\n@import '~bootstrap/scss/functions';\n@import '~bootstrap/scss/variables';\n@import '~bootstrap/scss/mixins';\n@import '~ngx-toastr/toastr-bs4-alert';\n```\n\n- If you are using angular-cli you can add it to your angular.json\n\n```ts\n\"styles\": [\n  \"styles.scss\",\n  \"node_modules/ngx-toastr/toastr.css\" // try adding '../' if you're using angular cli before 6\n]\n```\n\n**step 2:** add ToastrModule to app NgModule, make sure you have BrowserAnimationsModule as well\n\n```typescript\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot() // ToastrModule added\n  ],\n  bootstrap: [App],\n  declarations: [App]\n})\nclass MainModule {}\n```\n\n## Use\n\n```typescript\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({...})\nexport class YourComponent {\n  constructor(private toastr: ToastrService) {}\n\n  showSuccess() {\n    this.toastr.success('Hello world!', 'Toastr fun!');\n  }\n}\n```\n\n## Options\n\nThere are **individual options** and **global options**.\n\n### Individual Options\n\nPassed to `ToastrService.success/error/warning/info/show()`\n\n| Option            | Type                           | Default           | Description                                                                                                                               |\n| ----------------- | ------------------------------ | ----------------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| toastComponent    | Component                      | Toast             | Angular component that will be used                                                                                                       |\n| closeButton       | boolean                        | false             | Show close button                                                                                                                         |\n| timeOut           | number                         | 5000              | Time to live in milliseconds                                                                                                              |\n| extendedTimeOut   | number                         | 1000              | Time to close after a user hovers over toast                                                                                              |\n| disableTimeOut    | boolean                        | false             | Disable both timeOut and extendedTimeOut                                                                                                  |\n| easing            | string                         | 'ease-in'         | Toast component easing                                                                                                                    |\n| easeTime          | string \\| number               | 300               | Time spent easing                                                                                                                         |\n| enableHtml        | boolean                        | false             | Allow html in message                                                                                                                     |\n| progressBar       | boolean                        | false             | Show progress bar                                                                                                                         |\n| progressAnimation | `'decreasing' \\| 'increasing'` | 'decreasing'      | Changes the animation of the progress bar.                                                                                                |\n| toastClass        | string                         | 'ngx-toastr'      | Class on toast                                                                                                                            |\n| positionClass     | string                         | 'toast-top-right' | Class on toast container                                                                                                                  |\n| titleClass        | string                         | 'toast-title'     | Class inside toast on title                                                                                                               |\n| messageClass      | string                         | 'toast-message'   | Class inside toast on message                                                                                                             |\n| tapToDismiss      | boolean                        | true              | Close on click                                                                                                                            |\n| onActivateTick    | boolean                        | false             | Fires `changeDetectorRef.detectChanges()` when activated. Helps show toast from asynchronous events outside of Angular's change detection |\n\n#### Setting Individual Options\n\nsuccess, error, info, warning take `(message, title, ToastConfig)` pass an\noptions object to replace any default option.\n\n```typescript\nthis.toastrService.error('everything is broken', 'Major Error', {\n  timeOut: 3000\n});\n```\n\n### Global Options\n\nAll [individual options](#individual-options) can be overridden in the global\noptions to affect all toasts. In addition, global options include the following\noptions:\n\n| Option                  | Type    | Default                            | Description                                                                                                      |\n| ----------------------- | ------- | ---------------------------------- | ---------------------------------------------------------------------------------------------------------------- |\n| maxOpened               | number  | 0                                  | Max toasts opened. Toasts will be queued. 0 is unlimited                                                         |\n| autoDismiss             | boolean | false                              | Dismiss current toast when max is reached                                                                        |\n| iconClasses             | object  | [see below](#iconclasses-defaults) | Classes used on toastr service methods                                                                           |\n| newestOnTop             | boolean | true                               | New toast placement                                                                                              |\n| preventDuplicates       | boolean | true                               | Block duplicate messages                                                                                         |\n| countDuplicates         | boolean | false                              | Displays a duplicates counter (preventDuplicates must be true). Toast must have a title and duplicate message    |\n| resetTimeoutOnDuplicate | boolean | false                              | Reset toast timeout on duplicate (preventDuplicates must be true)                                                |\n\n##### iconClasses defaults\n\n```typescript\niconClasses = {\n  error: 'toast-error',\n  info: 'toast-info',\n  success: 'toast-success',\n  warning: 'toast-warning'\n};\n```\n\n#### Setting Global Options\n\nPass values to `ToastrModule.forRoot()`\n\n```typescript\n// root app NgModule\nimports: [\n  ToastrModule.forRoot({\n    timeOut: 10000,\n    positionClass: 'toast-bottom-right',\n    preventDuplicates: true,\n  }),\n],\n```\n\n### Toastr Service methods return:\n\n```typescript\nexport interface ActiveToast {\n  /** Your Toast ID. Use this to close it individually */\n  toastId: number;\n  /** the message of your toast. Stored to prevent duplicates */\n  message: string;\n  /** a reference to the component see portal.ts */\n  portal: ComponentRef<any>;\n  /** a reference to your toast */\n  toastRef: ToastRef<any>;\n  /** triggered when toast is active */\n  onShown: Observable<any>;\n  /** triggered when toast is destroyed */\n  onHidden: Observable<any>;\n  /** triggered on toast click */\n  onTap: Observable<any>;\n  /** available for your use in custom toast */\n  onAction: Observable<any>;\n}\n```\n\n### Put toasts in your own container\n\nPut toasts in a specific div inside your application. This should probably be\nsomewhere that doesn't get deleted. Add `ToastContainerModule` to the ngModule\nwhere you need the directive available.\n\n```typescript\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule, ToastContainerModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n\n    ToastrModule.forRoot({ positionClass: 'inline' }),\n    ToastContainerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\n\nAdd a div with `toastContainer` directive on it.\n\n```typescript\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ToastContainerDirective, ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <h1><a (click)=\"onClick()\">Click</a></h1>\n  <div toastContainer></div>\n`\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(ToastContainerDirective) toastContainer: ToastContainerDirective;\n\n  constructor(private toastrService: ToastrService) {}\n  ngOnInit() {\n    this.toastrService.overlayContainer = this.toastContainer;\n  }\n  onClick() {\n    this.toastrService.success('in div');\n  }\n}\n```\n\n## SystemJS\n\nIf you are using SystemJS, you should also adjust your configuration to point to\nthe UMD bundle.\n\nIn your SystemJS config file, `map` needs to tell the System loader where to\nlook for `ngx-toastr`:\n\n```js\nmap: {\n  'ngx-toastr': 'node_modules/ngx-toastr/bundles/ngx-toastr.umd.min.js',\n}\n```\n\n## Setup Without Animations\n\nIf you do not want to include `@angular/animations` in your project you can\noverride the default toast component in the global config to use\n`ToastNoAnimation` instead of the default one.\n\nIn your main module (ex: `app.module.ts`)\n\n```typescript\nimport {\n  ToastrModule,\n  ToastNoAnimation,\n  ToastNoAnimationModule\n} from 'ngx-toastr';\n\n@NgModule({\n  imports: [\n    // ...\n\n    // BrowserAnimationsModule no longer required\n    ToastNoAnimationModule.forRoot(),\n  ]\n  // ...\n})\nclass AppModule {}\n```\n\nThat's it! Animations are no longer required.\n\n## Using A Custom Toast\n\nCreate your toast component extending Toast see the demo's pink toast for an example\nhttps://github.com/scttcper/ngx-toastr/blob/master/src/app/pink.toast.ts\n\n```typescript\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  imports: [\n    ToastrModule.forRoot({\n      toastComponent: YourToastComponent // added custom toast!\n    })\n  ],\n  entryComponents: [YourToastComponent], // add!\n  bootstrap: [App],\n  declarations: [App, YourToastComponent] // add!\n})\nclass AppModule {}\n```\n\n## FAQ\n\n1.  ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it\n    was checked\\\n    When opening a toast inside an angular lifecycle wrap it in setTimeout\n\n```typescript\nngOnInit() {\n    setTimeout(() => this.toastr.success('sup'))\n}\n```\n\n2.  Change default icons (check, warning sign, etc)\\\n    Overwrite the css background-image https://github.com/scttcper/ngx-toastr/blob/master/src/lib/toastr.css\n3.  How do I use this in an ErrorHandler? See:\n    https://github.com/scttcper/ngx-toastr/issues/179\n4.  How can I translate messages See:\n    https://github.com/scttcper/ngx-toastr/issues/201\n5. How to handle toastr click/tap action?\n\n```ts\nshowToaster() {\n  this.toastr.success('Hello world!', 'Toastr fun!')\n    .onTap\n    .pipe(take(1))\n    .subscribe(() => this.toasterClickedHandler());\n}\n\ntoasterClickedHandler() {\n  console.log('Toastr clicked');\n}\n```\n\n## Previous Works\n\n[toastr](https://github.com/CodeSeven/toastr) original toastr\\\n[angular-toastr](https://github.com/Foxandxss/angular-toastr) AngularJS toastr\\\n[notyf](https://github.com/caroso1222/notyf) notyf (css)\n\n## License\n\nMIT\n\n---\n\n> GitHub [@scttcper](https://github.com/scttcper) &nbsp;&middot;&nbsp;\n> Twitter [@scttcper](https://twitter.com/scttcper)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/scttcper/ngx-toastr.git"
  },
  "sideEffects": false,
  "typings": "ngx-toastr.d.ts",
  "version": "10.0.2"
}
